name: Publish to NuGet

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  workflow_dispatch: # Allow manual kick off
  schedule:
    - cron: '0 0 * * 0'  # Runs at midnight every Sunday (UTC time)

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Compare release versions
      id: get-releases
      shell: pwsh
      run: |
        ./.github/scripts/compare-versions.ps1

    - name: Update project files
      if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
      shell: pwsh
      run: |
        ./.github/scripts/update-project.ps1 -NewVersion '${{ steps.get-releases.outputs.si }}'

    - name: Update icons
      if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
      shell: pwsh
      run: |
        ./.github/scripts/update-icons.ps1 -WorkspacePath '${{ github.workspace }}'

    - name: Publish changes
      if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
      shell: pwsh
      env:
        REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      run: |
        ./.github/scripts/git-publish.ps1 `
          -Version '${{ steps.get-releases.outputs.si }}' `
          -RepoToken "${{ secrets.REPO_ACCESS_TOKEN }}" `
          -Repository '${{ github.repository }}'

    - name: Set NuGet Key
      shell: pwsh
      run: |
        "Nuget_Key=${{ secrets.PUBLISH_TO_NUGET_ORG }}" >> $env:GITHUB_ENV

    - name: Publish to NuGet
      if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
      shell: pwsh
      run: |
        $env:Nuget_Key = "${{ secrets.PUBLISH_TO_NUGET_ORG }}"
        ./publish.ps1
